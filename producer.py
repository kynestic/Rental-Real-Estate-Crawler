from kafka import KafkaProducer
import json
from tools.crawler.apartment.Apartment import ApartmentCrawler
from tools.crawler.redfin.Redfin import RedfinCrawler
from tools.crawler.realtor.Realtor import RealtorCrawler
from concurrent.futures import ThreadPoolExecutor, as_completed
import re
import traceback

class RealEstateKafkaProducer:
    def __init__(self, topic_name: str, bootstrap_servers='localhost:19092'):
        self.producer = KafkaProducer(
            bootstrap_servers=bootstrap_servers,
            value_serializer=lambda v: json.dumps(v).encode('utf-8'),
            key_serializer=str.encode
        )
        self.topic_name = topic_name

    def send(self, key: str, value: dict):
        self.producer.send(self.topic_name, key=key, value=value)

    def flush(self):
        self.producer.flush()

def get_zipcode_list(state_code):
    return [90011,
90650,
91331,
90044,
90201,
90250,
90805,
90280,
91342,
91744,
93550,
90706,
93535,
91335,
93536,
91706,
90003,
90255,
91766,
90631,
90026,
91402,
90262,
90037,
90022,
90731,
91343,
90001,
90640,
90660,
90019,
91702,
90004,
91770,
90042,
91732,
90006,
90066,
90813,
90744,
91406,
93551,
90745,
91344,
90002,
91745,
91304,
91801,
91405,
90221,
90047,
90723,
91605,
90063,
90034,
90018,
91767,
90703,
90046,
90638,
91306,
90220,
90065,
90023,
90057,
90033,
91789,
91352,
90027,
92821,
91790,
90032,
90247,
90242,
90025,
91367,
90043,
93534,
90241,
90016,
90503,
91733,
91748,
91765,
90024,
91311,
90007,
90806,
90059,
90815,
90501,
93552,
90278,
90605,
90275,
91016,
91401,
91606,
91387,
91350,
90810,
90604,
90045,
90808,
90301,
91355,
91321,
90802,
91776,
90505,
90804,
90012,
90036,
90031,
91711,
91104,
90277,
91205,
91001,
90020,
91325,
90266,
90049,
91601,
91326,
91780,
90062,
90260,
91340,
91722,
91006,
90222,
91754,
91768,
90230,
90008,
91773,
90504,
91107,
91750,
91007,
90601,
91791,
90712,
90807,
90029,
91505,
91351,
90606,
91214,
91423,
91607,
91724,
91206,
91604,
90803,
91792,
91324,
91303,
91731,
90005,
90061,
90028,
91356,
91354,
91803,
90041,
91316,
90713,
90302,
90039,
90710,
91746,
90405,
90304,
90038,
91740,
91010,
90017,
91755,
91030,
91741,
90035,
91103,
91302,
91042,
90064,
91364,
91504,
90746,
90249,
90291,
90274,
91301,
90270,
90015,
91307,
90240,
90602,
91384,
91403,
90303,
91411,
90185,
91390,
91775,
90404,
90292,
91106,
90403,
91201,
90717,
90272,
91040,
91011,
91202,
90068,
90069,
90715,
90732,
90603,
91101,
90845,
90670,
91497,
91602,
90254,
90048,
91388,
90265,
90210,
90502,
90814,
90174,
91506,
91501,
91203,
91361,
91345,
91204,
91723,
90245,
91381,
90701,
90097,
90232,
91436,
91841,
90313,
91502,
91208,
90248,
91105,
90716,
90305,
91108,
90013,
90293,
91207,
90755,
90040,
90402,
90398,
90010,
90212,
93543,
91024,
91799,
90659,
90397,
91399,
90102,
90665,
90094,
90077,
90401,
90211,
91312,
90056,
91187,
90888,
93591,
91020,
91175,
90014,
93510,
90290,
90095,
90612,
91131,
91191,
90058,
93532,
90021,
90704,
92397,
91186,
90089,
93553,
93544,
90067,
90071,
93243,
91330,
91008,
91210,
90822,
91759,
90506,
93563,
90840,
91608,
90090,
90831,
90073,
91188,
91795,
91797,
90101,
90103,
90835,
90834,
90899,
90510,
93539,
93599,
90009,
90747,
90844,
90263,
91383,
91409,
90233,
93584,
93590,
93586,
90030,
90050,
90052,
90051,
90054,
90053,
90055,
90060,
90070,
90072,
90295,
90294,
90296,
90307,
90306,
90309,
90308,
90311,
90310,
90312,
90406,
90408,
90407,
90410,
90409,
90411,
90507,
90509,
90508,
90607,
90609,
90608,
90610,
90637,
90639,
90652,
90651,
90662,
90661,
90671,
90702,
90707,
90711,
90714,
90733,
90734,
90749,
90748,
90801,
90809,
90833,
90832,
90842,
90847,
90846,
90853,
90848,
90895,
90074,
90076,
90075,
90078,
90080,
90079,
90082,
90081,
90084,
90083,
90087,
90086,
90088,
90093,
90091,
90096,
90099,
90189,
90209,
90202,
90213,
90223,
90224,
90231,
90239,
90251,
90261,
90264,
90267,
91003,
91009,
91012,
91017,
91023,
91021,
91025,
91031,
91041,
91043,
91066,
91046,
91077,
91102,
91109,
91114,
91110,
91116,
91115,
91118,
91117,
91123,
91121,
91125,
91124,
91129,
91126,
91184,
91182,
91185,
91189,
91209,
91221,
91224,
91734,
91735,
91747,
91749,
91756,
91769,
91771,
91772,
91778,
91788,
91793,
91802,
91804,
91899,
91896,
91222,
91226,
91225,
91305,
91308,
91310,
91309,
91313,
91322,
91327,
91329,
91328,
91334,
91333,
91337,
91341,
91346,
91353,
91357,
91365,
91372,
91371,
91376,
91380,
91382,
91385,
91386,
91393,]
state_list = ['LA']

def get_apartment_data(zipcode):
    crawler = ApartmentCrawler(zipcode)
    return crawler.getData()

def get_realtor_data(zipcode):
    crawler = RealtorCrawler(zipcode)
    return crawler.getData()

def get_redfin_data(zipcode):
    crawler = RedfinCrawler(zipcode)
    return crawler.getData()

task_list = [get_redfin_data, get_realtor_data, get_apartment_data]

while True:
    for state in state_list:
        zipcode_list = get_zipcode_list(state)
        data = []

        with ThreadPoolExecutor(max_workers=50) as executor:
            futures = [executor.submit(task, str(zc)) for zc in zipcode_list for task in task_list]

            for future in as_completed(futures):
                try:
                    items = future.result()
                    for item in items:
                        match = re.search(r"(?:www\.)?([a-zA-Z0-9\-]+)\.com", item['source'])
                        
                        key = f"{match.group(1)}_rental_raw"
                        topic_name = f"{match.group(1)}_rental"

                        print(topic_name)

                        producer = RealEstateKafkaProducer(topic_name=topic_name)
                        producer.send(key=key, value=item)
                except Exception as e:
                    print(f"Lỗi khi xử lý zipcode: {e}")
                    traceback.print_exc()



